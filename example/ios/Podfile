# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

NSE = 'AppcuesNotificationServiceExtension'
target NSE do
  use_frameworks!
  pod 'AppcuesNotificationService', '4.0.0'
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
      target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      end
    end
  end

  # Update the .xcconfig file for the pods to include Flutter's generated values.
  # This essentially does the same thing (just including in the opposite direction)
  # as Flutter/[Debug|Release].xcconfig without needing an extra file.
  Dir.glob("Pods/Target Support Files/Pods-#{NSE}/*.xcconfig") do |xc_config_filename|
      full_path_name = "#{Dir.pwd}/#{xc_config_filename}"
      xc_config = File.read(full_path_name)
      xc_config << "#include \"../../../Flutter/Generated.xcconfig\""
      File.open(full_path_name, 'w') { |file| file << xc_config }
  end

end
